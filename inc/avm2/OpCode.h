#ifndef __AVM2_OPCODE__
#define __AVM2_OPCODE__

typedef const unsigned char opcode_type;
struct namespace_opcode {
	opcode_type add;
	opcode_type add_i;
	opcode_type applytype;
	opcode_type astype;
	opcode_type astypelate;
	opcode_type bitand;
	opcode_type bitnot;
	opcode_type bitor ;
	opcode_type bitxor;
	opcode_type bkpt;
	opcode_type bkptline;
	opcode_type call;
	opcode_type callmethod;
	opcode_type callproperty;
	opcode_type callproplex;
	opcode_type callpropvoid;
	opcode_type callstatic;
	opcode_type callsuper;
	opcode_type callsupervoid;
	opcode_type checkfilter;
	opcode_type coerce;
	opcode_type coerce_a;
	opcode_type coerce_b;
	opcode_type coerce_d;
	opcode_type coerce_i;
	opcode_type coerce_o;
	opcode_type coerce_s;
	opcode_type coerce_u;
	opcode_type construct;
	opcode_type constructprop;
	opcode_type constructsuper;
	opcode_type convert_b;
	opcode_type convert_d;
	opcode_type convert_i;
	opcode_type convert_o;
	opcode_type convert_s;
	opcode_type convert_u;
	opcode_type debug;
	opcode_type debugfile;
	opcode_type debugline;
	opcode_type declocal;
	opcode_type declocal_i;
	opcode_type decrement;
	opcode_type decrement_i;
	opcode_type deleteproperty;
	opcode_type divide;
	opcode_type dup;
	opcode_type dxns;
	opcode_type dxnslate;
	opcode_type equals;
	opcode_type esc_xattr;
	opcode_type esc_xelem;
	opcode_type finddef;
	opcode_type findproperty;
	opcode_type findpropstrict;
	opcode_type getdescendants;
	opcode_type getglobalscope;
	opcode_type getglobalslot;
	opcode_type getlex;
	opcode_type getlocal;
	opcode_type getlocal_0;
	opcode_type getlocal_1;
	opcode_type getlocal_2;
	opcode_type getlocal_3;
	opcode_type getouterscope;
	opcode_type getproperty;
	opcode_type getscopeobject;
	opcode_type getslot;
	opcode_type getsuper;
	opcode_type greaterequals;
	opcode_type greaterthan;
	opcode_type hasnext;
	opcode_type hasnext2;
	opcode_type ifeq;
	opcode_type iffalse;
	opcode_type ifge;
	opcode_type ifgt;
	opcode_type ifle;
	opcode_type iflt;
	opcode_type ifne;
	opcode_type ifnge;
	opcode_type ifngt;
	opcode_type ifnle;
	opcode_type ifnlt;
	opcode_type ifstricteq;
	opcode_type ifstrictne;
	opcode_type iftrue;
	opcode_type in;
	opcode_type inclocal;
	opcode_type inclocal_i;
	opcode_type increment;
	opcode_type increment_i;
	opcode_type initproperty;
	opcode_type instanceof;
	opcode_type istype;
	opcode_type istypelate;
	opcode_type jump;
	opcode_type kill;
	opcode_type label;
	opcode_type lessequals;
	opcode_type lessthan;
	opcode_type lf32;
	opcode_type lf64;
	opcode_type li16;
	opcode_type li32;
	opcode_type li8;
	opcode_type lookupswitch;
	opcode_type lshift;
	opcode_type modulo;
	opcode_type multiply;
	opcode_type multiply_i;
	opcode_type negate;
	opcode_type negate_i;
	opcode_type newactivation;
	opcode_type newarray;
	opcode_type newcatch;
	opcode_type newclass;
	opcode_type newfunction;
	opcode_type newobject;
	opcode_type nextname;
	opcode_type nextvalue;
	opcode_type nop;
	opcode_type not;
	opcode_type pop;
	opcode_type popscope;
	opcode_type pushbyte;
	opcode_type pushconstant;
	opcode_type pushdouble;
	opcode_type pushfalse;
	opcode_type pushint;
	opcode_type pushnamespace;
	opcode_type pushnan;
	opcode_type pushnull;
	opcode_type pushscope;
	opcode_type pushshort;
	opcode_type pushstring;
	opcode_type pushtrue;
	opcode_type pushuint;
	opcode_type pushundefined;
	opcode_type pushwith;
	opcode_type returnvalue;
	opcode_type returnvoid;
	opcode_type rshift;
	opcode_type setglobalslot;
	opcode_type setlocal;
	opcode_type setlocal_0;
	opcode_type setlocal_1;
	opcode_type setlocal_2;
	opcode_type setlocal_3;
	opcode_type setproperty;
	opcode_type setslot;
	opcode_type setsuper;
	opcode_type sf32;
	opcode_type sf64;
	opcode_type si16;
	opcode_type si32;
	opcode_type si8;
	opcode_type strictequals;
	opcode_type subtract;
	opcode_type subtract_i;
	opcode_type swap;
	opcode_type sxi1;
	opcode_type sxi16;
	opcode_type sxi8;
	opcode_type throw_e;
	opcode_type timestamp;
	opcode_type typeof;
	opcode_type urshift;
};
extern const struct namespace_opcode avm_opcode;

#endif //__AVM2_OPCODE__